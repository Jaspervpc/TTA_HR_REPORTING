{
	"name": "200_PERSONIO_DATA",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "PersonioASCII",
						"type": "DatasetReference"
					},
					"name": "PersonioASCII",
					"description": "Daten aus PersonioASCII importieren"
				},
				{
					"dataset": {
						"referenceName": "200_CompanyTranslation",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "200_Personio_Data",
						"type": "DatasetReference"
					},
					"name": "Personio"
				}
			],
			"transformations": [
				{
					"name": "LOADDatum"
				},
				{
					"name": "filter1"
				},
				{
					"name": "abgSp"
				},
				{
					"name": "cast1"
				},
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     PYear as string ('2025'),",
				"     PMonth as string ('05')",
				"}",
				"source(output(",
				"          Status as string,",
				"          ID as integer,",
				"          {E-Mail} as string,",
				"          {Nachname (bürgerlich)} as string,",
				"          {Vorname (bürgerlich)} as string,",
				"          Abteilung as string,",
				"          Alter as string,",
				"          {Angestellt als} as string,",
				"          Anstelldatum as string,",
				"          Anstellungsart as string,",
				"          {Mitarbeitergruppen nach Funktion} as string,",
				"          Austrittsart11 as string,",
				"          Austrittsart12 as string,",
				"          {Austrittsdatum (aktueller Beschäftigungszeitraum)} as string,",
				"          {Betriebsstätte} as string,",
				"          {Betriebszugehörigkeit (in Jahren)} as string,",
				"          {Eintrittsdatum (aktueller Beschäftigungszeitraum)} as string,",
				"          {Ende des Arbeitsverhältnisses} as string,",
				"          Ersteintrittsdatum as string,",
				"          FTE as string,",
				"          Geschlecht as string,",
				"          Gesellschaft as string,",
				"          {Grad der Behinderung} as string,",
				"          Kostenstelle as string,",
				"          {Kündigung (Datum)} as string,",
				"          {Kündigungsgrund} as string,",
				"          {Mitarbeitendenzahl (Status „Aktiv“ und „Auszeit“)} as string,",
				"          {DATEV Personalnummer} as string,",
				"          Position as string,",
				"          Wochenstunden as string,",
				"          {Bad Churn} as string,",
				"          {Arbeits- und Wegeunfall / Work and Commute-related Accidents – genommen (Tage)} as string,",
				"          {_c32} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     wildcardPaths:[(concat('Personio/aktueller_Monat/Data_', $PYear, '_', $PMonth, '.csv'))]) ~> PersonioASCII",
				"source(output(",
				"          COMPANY as string,",
				"          COMPANY_KEY as string,",
				"          VALID_TO as integer,",
				"          VALID_FROM as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"cast1 derive(LoadDatum = currentTimestamp(),",
				"          LoadPeriode = concat($PYear, $PMonth),",
				"          Betriebszuge = toInteger({Betriebszugehörigkeit (in Jahren)})) ~> LOADDatum",
				"PersonioASCII filter(!isNull(Gesellschaft)) ~> filter1",
				"LOADDatum derive(vFTE = toDecimal(FTE, 27, 4, '#,##', 'de'),",
				"          Anstellungsdauer = toDecimal(Betriebszuge),",
				"          AktiveMA = toDecimal( {Mitarbeitendenzahl (Status „Aktiv“ und „Auszeit“)}, 27, 4, '#,##', 'de'),",
				"          WochenStd = toDecimal(Wochenstunden, 27, 4, '#,##', 'de'),",
				"          ArbUnf = iif(toInteger({Arbeits- und Wegeunfall / Work and Commute-related Accidents – genommen (Tage)}) > 0, 'Ja', toString(null())),",
				"          ABTodesfall = iif(Austrittsart11 == 'Arbeitsbedingter Todesfall', 'Ja', toString(null())),",
				"          Tenure_calculated = toInteger(round(minus(LoadDatum, toTimestamp(Ersteintrittsdatum, \"dd.MM.yyyy\")) / 1000 / 60 / 60 / 24 / 365.25, 0, 2))) ~> abgSp",
				"filter1 cast(output(",
				"          Alter as decimal(10,0) '000,000,000.000',",
				"          {Betriebszugehörigkeit (in Jahren)} as decimal(10,0) '000,000,000.000'",
				"     ),",
				"     errors: true) ~> cast1",
				"abgSp, source1 join(Gesellschaft == COMPANY,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          STATUS as string,",
				"          ID as string,",
				"          MAILADDRESS as string,",
				"          FIRSTNAME as string,",
				"          LASTNAME as string,",
				"          DEPARTMENT as string,",
				"          AGE as decimal(27,4),",
				"          HIRED_AS as string,",
				"          HIRE_DATE as date,",
				"          EMPLOYMENT_TYPE as string,",
				"          EMPLOYEE_GROUPS_BY_FUNCTION as string,",
				"          EXIT_TYPE as string,",
				"          EXIT_TYPE_2 as string,",
				"          LEAVING_DATE_CURRENT_EMPLOYMENT_PERIOD as date,",
				"          PLACE_OF_BUSINESS as string,",
				"          LENGTH_OF_EMPLOYMENT_IN_YEARS as decimal(27,4),",
				"          ENTRY_DATE_CURRENT_EMPLOYMENT_PERIOD as date,",
				"          END_OF_EMPLOYMENT as date,",
				"          FIRST_ENTRY_DATE as date,",
				"          FTE as decimal(27,4),",
				"          GENDER as string,",
				"          COMPANY as string,",
				"          DEGREE_OF_SEVERE_DISABILITY as string,",
				"          COST_CENTRE as string,",
				"          TERMINATION_DATE as date,",
				"          REASON_FOR_TERMINATION as string,",
				"          NUMBER_OF_EMPLOYEES_STATUS_ACTIVE_AND_TIME_OFF as decimal(27,4),",
				"          DATEV_PERSONNEL_NUMBER as string,",
				"          POSITION as string,",
				"          WEEKLY_HOURS as decimal(27,4),",
				"          LOAD_PERIOD as string,",
				"          LOAD_TIME as timestamp,",
				"          BAD_CHURN as string,",
				"          ACCIDENT_AT_WORK as string,",
				"          WORKRELATED_DEATH as string,",
				"          COMPANY_KEY as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:[(concat('delete from [200_STG].[F_PERSONIO_DATA] WHERE [LOAD_PERIOD] = ', $PYear, $PMonth))],",
				"     dateFormat:'dd.MM.yyyy',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          STATUS = Status,",
				"          ID,",
				"          MAILADDRESS = {E-Mail},",
				"          FIRSTNAME = {Vorname (bürgerlich)},",
				"          LASTNAME = {Nachname (bürgerlich)},",
				"          DEPARTMENT = Abteilung,",
				"          AGE = Alter,",
				"          HIRED_AS = {Angestellt als},",
				"          HIRE_DATE = Anstelldatum,",
				"          EMPLOYMENT_TYPE = Anstellungsart,",
				"          EMPLOYEE_GROUPS_BY_FUNCTION = {Mitarbeitergruppen nach Funktion},",
				"          EXIT_TYPE = Austrittsart11,",
				"          EXIT_TYPE_2 = Austrittsart12,",
				"          LEAVING_DATE_CURRENT_EMPLOYMENT_PERIOD = {Austrittsdatum (aktueller Beschäftigungszeitraum)},",
				"          PLACE_OF_BUSINESS = {Betriebsstätte},",
				"          LENGTH_OF_EMPLOYMENT_IN_YEARS = Tenure_calculated,",
				"          ENTRY_DATE_CURRENT_EMPLOYMENT_PERIOD = {Eintrittsdatum (aktueller Beschäftigungszeitraum)},",
				"          END_OF_EMPLOYMENT = {Ende des Arbeitsverhältnisses},",
				"          FIRST_ENTRY_DATE = Ersteintrittsdatum,",
				"          FTE = vFTE,",
				"          GENDER = Geschlecht,",
				"          COMPANY = Gesellschaft,",
				"          DEGREE_OF_SEVERE_DISABILITY = {Grad der Behinderung},",
				"          COST_CENTRE = Kostenstelle,",
				"          TERMINATION_DATE = {Kündigung (Datum)},",
				"          REASON_FOR_TERMINATION = {Kündigungsgrund},",
				"          NUMBER_OF_EMPLOYEES_STATUS_ACTIVE_AND_TIME_OFF = AktiveMA,",
				"          DATEV_PERSONNEL_NUMBER = {DATEV Personalnummer},",
				"          POSITION = Position,",
				"          WEEKLY_HOURS = WochenStd,",
				"          LOAD_PERIOD = LoadPeriode,",
				"          LOAD_TIME = LoadDatum,",
				"          BAD_CHURN = {Bad Churn},",
				"          ACCIDENT_AT_WORK = ArbUnf,",
				"          WORKRELATED_DEATH = ABTodesfall,",
				"          COMPANY_KEY",
				"     )) ~> Personio"
			]
		}
	}
}